services:
  # PostgreSQL with better memory allocation
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: gymapp
      POSTGRES_USER: gymapp_user
      POSTGRES_PASSWORD: gymapp_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M  # Increased from 128M
          cpus: '0.75'  # Increased from 0.5
    command: [
      "postgres",
      "-c", "shared_buffers=128MB",      # Increased from 32MB
      "-c", "effective_cache_size=384MB", # Increased from 96MB
      "-c", "maintenance_work_mem=64MB",  # Increased from 16MB
      "-c", "checkpoint_completion_target=0.9",
      "-c", "wal_buffers=16MB",          # Increased from 4MB
      "-c", "default_statistics_target=100",
      "-c", "random_page_cost=1.1",
      "-c", "effective_io_concurrency=200",
      "-c", "work_mem=8MB",              # Increased from 4MB
      "-c", "min_wal_size=80MB",
      "-c", "max_wal_size=2GB"           # Increased from 1GB
    ]

  # Redis with more memory
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru --save "" --appendonly no
    ports:
      - "6379:6379"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 192M  # Increased from 48M
          cpus: '0.5'   # Increased from 0.25

  # Django Web Service with more resources
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://gymapp_user:gymapp_password@db:5432/gymapp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0,46.101.193.107}
      - DJANGO_SETTINGS_MODULE=gymapp.settings
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - SENTRY_DSN=${SENTRY_DSN}
    volumes:
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M  # Increased from 128M
          cpus: '1.0'   # Increased from 0.75
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s    # More frequent checks
      timeout: 10s
      retries: 3
      start_period: 60s

  # Celery Worker with better concurrency
  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A gymapp worker --loglevel=info --concurrency=2 --prefetch-multiplier=2 --max-tasks-per-child=200 --without-gossip --without-mingle
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://gymapp_user:gymapp_password@db:5432/gymapp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=gymapp.settings
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - SENTRY_DSN=${SENTRY_DSN}
    volumes:
      - media_files:/app/media
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M  # Increased from 96M
          cpus: '0.75'  # Increased from 0.5

  # Celery Beat with more resources
  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A gymapp beat --loglevel=info --max-interval=300
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://gymapp_user:gymapp_password@db:5432/gymapp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=gymapp.settings
    volumes:
      - media_files:/app/media
      - celerybeat_schedule:/app
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M  # Increased from 64M
          cpus: '0.5'   # Increased from 0.25

  # Frontend with more resources
  frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-http://46.101.193.107:8000}
        REACT_APP_API_HOST: ${REACT_APP_API_HOST:-46.101.193.107:8000}
        NODE_ENV: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - web
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M  # Increased from 32M
          cpus: '0.5'   # Increased from 0.25
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s    # More frequent checks
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx with better resources
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"  # Added HTTPS support
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files:/app/staticfiles:ro
      - media_files:/app/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # For SSL certificates
    depends_on:
      - web
      - frontend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M   # Increased from 24M
          cpus: '0.5'   # Increased from 0.25
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  media_files:
    driver: local
  static_files:
    driver: local
  celerybeat_schedule:
    driver: local

networks:
  default:
    driver: bridge