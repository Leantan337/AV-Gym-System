version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: gymapp
      POSTGRES_USER: gymapp_user
      POSTGRES_PASSWORD: gymapp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gymapp_user -d gymapp"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery and WebSocket
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Web Application
  web:
    build: .
    command: gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 gymapp.wsgi:application
    volumes:
      - .:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://gymapp_user:gymapp_password@db:5432/gymapp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery:
    build: .
    command: celery -A gymapp worker --loglevel=info --concurrency=2
    volumes:
      - .:/app
      - media_files:/app/media
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://gymapp_user:gymapp_password@db:5432/gymapp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    command: celery -A gymapp beat --loglevel=info
    volumes:
      - .:/app
      - media_files:/app/media
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://gymapp_user:gymapp_password@db:5432/gymapp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Flower (Monitoring)
  flower:
    build: .
    command: celery -A gymapp flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_files:/app/staticfiles
      - media_files:/app/media
    depends_on:
      - web
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files: 